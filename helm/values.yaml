        # Default values for perfsonar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: perfsonar/testpoint
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v5.2.0"

strategy:
  type: Recreate
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: "perfsonar-testpoint"
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

#service:
#  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#  type: ClusterIP
#  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
#ingress:
#  enabled: true
#  className: ""
#  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: perfsonar.grena.ge
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
#  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 2000m
     memory: 3072Mi
   requests:
     cpu: 1000m
     memory: 2048Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#readinessProbe:
#  httpGet:
#    path: /
#    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
 - name: pschedulerconfig
   configMap:
     name: pscheduler-configmap

 - name: owampconfig
   configMap:
     name: owamp-config 

 - name: twampconfig
   configMap:
     name: twamp-config 

 - name: twamplimits
   configMap:
     name: twamp-limits

 - name: owamplimits
   configMap:
     name: owamp-limits

 #- name: postgresql-data
 #  persistentVolumeClaim:
 #    claimName: postgres-pvc

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
 - name: pschedulerconfig
   mountPath: "/etc/perfsonar/psconfig"
   #   subPath: pscheduler-agent-logger.conf
   readOnly: true

 - name: owampconfig
   mountPath: "/etc/owamp-server/owamp-server.conf"
   subPath: owamp-server.conf
   readOnly: true

 - name: twampconfig
   mountPath: "/etc/twamp-server/twamp-server.conf"
   subPath: twamp-server.conf
   readOnly: true

 - name: twamplimits
   mountPath: "/etc/twamp-server/twamp-server.limits"
   subPath: twamp-server.limits
   readOnly: true

 - name: owamplimits
   mountPath: "/etc/twamp-server/owamp-server.limits"
   subPath: owamp-server.limits
   readOnly: true

 #- name: postgresql-data
 #  mountPath: /var/lib/postgresql

nodeSelector: {}

tolerations: []

affinity: {}
